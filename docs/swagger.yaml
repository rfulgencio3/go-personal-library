basePath: /
definitions:
  domain.Book:
    properties:
      author:
        type: string
      comments:
        type: string
      id:
        type: string
      pages:
        type: integer
      publisher:
        type: string
      subtitle:
        type: string
      title:
        type: string
    type: object
  domain.ReadBook:
    properties:
      actual_end_date:
        type: string
      book_id:
        type: string
      comments:
        items:
          type: string
        type: array
      expected_end_date:
        type: string
      id:
        type: string
      rating:
        type: integer
      start_date:
        type: string
    required:
    - book_id
    - start_date
    type: object
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.SuccessResponse:
    properties:
      data: {}
    type: object
host: localhost:8080
info:
  contact:
    email: rfulgencio3@gmail.com
    name: Ricardo Fulgencio
    url: https://github.com/rfulgencio3
  description: API for managing personal library of books.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Go Personal Library API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Retrieve all books from the library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the library
      parameters:
      - description: Book to add
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a book from the library by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a book by ID
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Retrieve a book from the library by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update a book in the library by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a book by ID
      tags:
      - books
  /read_books:
    get:
      consumes:
      - application/json
      description: Get all read book records
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ReadBook'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all read books
      tags:
      - read_books
    post:
      consumes:
      - application/json
      description: Add a new read book record
      parameters:
      - description: Read Book to add (no ID)
        in: body
        name: read_book
        required: true
        schema:
          $ref: '#/definitions/domain.ReadBook'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.ReadBook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new read book
      tags:
      - read_books
  /read_books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a read book record by its ID
      parameters:
      - description: Read Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a read book by ID
      tags:
      - read_books
    get:
      consumes:
      - application/json
      description: Get a read book record by its ID
      parameters:
      - description: Read Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ReadBook'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a read book by ID
      tags:
      - read_books
    put:
      consumes:
      - application/json
      description: Update a read book record by its ID
      parameters:
      - description: Read Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Read Book data
        in: body
        name: read_book
        required: true
        schema:
          $ref: '#/definitions/domain.ReadBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ReadBook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a read book by ID
      tags:
      - read_books
  /read_books/{id}/comments:
    post:
      consumes:
      - application/json
      description: Add a comment to the read book's comments list
      parameters:
      - description: Read Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Comment to add
        in: body
        name: comment
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Comment added successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Add a comment to a read book
      tags:
      - read_books
schemes:
- http
swagger: "2.0"
